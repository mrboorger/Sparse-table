struct sparse_table
{
    vector <int> T[maxn];
    inline void calc()
    {
        dv[0] = 1;
        for(int i = 1; i < 20; ++i)
            dv[i] = dv[i - 1] << 1;
        int j = 0;
        for(int i = 0; i < maxn; ++i)
        {
            if (dv[j + 1] == i) ++j;
            st[i] = j;
        }
    }

    inline void build(int n)
    {
        for(int i = 1; i < 20; ++i)
            for(int j = 0; j + dv[i] - 1 < n; ++j)
                T[j].pb(gcd(T[j][i - 1], T[j + dv[i - 1]][i - 1]));
        return;
    }

    inline int query(int l, int r)
    {
        int sz = st[r - l + 1];
        return gcd(T[l][sz], T[r - dv[sz] + 1][sz]);
    }

};
